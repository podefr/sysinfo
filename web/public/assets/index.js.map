{"version":3,"sources":["node_modules/browser-pack/_prelude.js","modules/loadavg/index.js","index.js","modules/loadavg/manifest.json","src/cerberus.conf.json","src/cerberus/cerberusAPI.js","src/cerberus/index.js","src/index.js","src/ui/lineChart/index.js"],"names":[],"mappings":";;AAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AAAA,oBAAA,IAAA,OAAA,OAAA,IAAA,UAAA,IAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,CAAA,yBAAA,CAAA,GAAA,GAAA,CAAA,CAAA,MAAA,EAAA,IAAA,GAAA,kBAAA,EAAA,CAAA,CAAA;aAAA,IAAA,IAAA,EAAA,CAAA,IAAA,EAAA,SAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,oBAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,OAAA,EAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA;aAAA,EAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;SAAA,OAAA,EAAA,CAAA,EAAA,OAAA,CAAA;KAAA,IAAA,IAAA,OAAA,OAAA,IAAA,UAAA,IAAA,OAAA,CAAA,KAAA,IAAA,IAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA;AAAA,UAAA,EAAA,CAAA,CAAA;KAAA,OAAA,CAAA,CAAA;CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA;ACAA,qBDAA;;ACEA,YAAA,oBAAA,CDFA;;ACIA,eAAA,OAAA,GAAA;AACA,kBAAA,SAAA,IAAA,CAAA,YAAA,EAAA;AACA,8BAAA,YAAA,CADA;;AAGA,oBAAA,SAAA,YAAA,SAAA,CAAA,SAAA,CAAA,CAHA;;AAKA,uBAAA,EAAA,CAAA,SAAA,EAAA;2BAAA,QAAA,GAAA,CAAA,OAAA;iBAAA,CAAA,CALA;;AAOA,uCAPA;AAQA,sCARA;aAAA;SADA,CDJA;;ACkBA,iBAAA,oBAAA,GAAA;AACA,oBAAA,GAAA,CAAA,yBAAA,EADA;SAAA;;AAIA,iBAAA,mBAAA,GAAA,EAAA;KDtBA,EE0BE,EF1BF,CAAA,EE0BM,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AC1BzC,eAAA,OAAA,GAAA;AACA,oBAAA,SAAA;AACA,2BAAA,4CAAA;AACA,qBAAA,UAAA;AACA,wBAAA;AACA,8BAAA,CAAA,WAAA,CAAA;AACA,0BAAA,CAAA,SAAA,CAAA;AACA,2BAAA,EAAA;aAHA;AAKA,6BAAA;AACA,8BAAA;AACA,8BAAA,EAAA;AACA,4BAAA,SAAA;iBAFA;aADA;SATA,CD0ByC;KAAhC,EAiBP,EAjBM,CAAF,EAiBA,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AE3CzC,eAAA,OAAA,GAAA;AACA,qBAAA,8BAAA;AACA,uBAAA;AACA,2BAAA,qBAAA;aADA;AAGA,0BAAA,CAAA,WAAA,CAAA;SALA,CF2CyC;KAAhC,EAQP,EARM,CAAF,EAQA,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AGnDzC,qBHmDyC;;AGjDzC,YAAA,sBAAA,CHiDyC;;AG/CzC,iBAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA;AACA,iBAAA,YAAA,GAAA,SAAA,YAAA,CAAA,aAAA,EAAA;AACA,oBAAA,CAAA,WAAA,aAAA,CAAA,EAAA;AACA,0BAAA,IAAA,KAAA,CAAA,8CAAA,oDAAA,CAAA,CADA;iBAAA;;AAIA,uBAAA,WAAA,aAAA,CAAA,CALA;aAAA,CADA;;AASA,iBAAA,SAAA,GAAA,SAAA,SAAA,CAAA,UAAA,EAAA;AACA,oBAAA,CAAA,QAAA,UAAA,CAAA,EAAA;AACA,0BAAA,IAAA,KAAA,CAAA,2CAAA,iDAAA,CAAA,CADA;iBAAA;;AAIA,uBAAA,QAAA,UAAA,CAAA,CALA;aAAA,CATA;SAAA;;AAkBA,eAAA,OAAA,GAAA;AACA,kBAAA,SAAA,IAAA,CAAA,MAAA,EAAA;AACA,gCAAA,MAAA,CADA;aAAA;;AAIA,kCAAA,SAAA,oBAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,oBAAA,mBAAA,SAAA,UAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA,eAAA,EAAA;AACA,wBAAA,CAAA,cAAA,UAAA,CAAA,eAAA,CAAA,EAAA;AACA,8BAAA,IAAA,KAAA,CAAA,qCAAA,yCAAA,CAAA,CADA;qBAAA;;AAIA,yBAAA,eAAA,IAAA,cAAA,UAAA,CAAA,eAAA,CAAA,CALA;AAMA,2BAAA,IAAA,CANA;iBAAA,EAOA,EAPA,CAAA,CADA;;AAUA,oBAAA,gBAAA,SAAA,MAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA,UAAA,EAAA;AACA,wBAAA,CAAA,cAAA,YAAA,CAAA,UAAA,CAAA,EAAA;AACA,8BAAA,IAAA,KAAA,CAAA,kCAAA,oCAAA,CAAA,CADA;qBAAA;;AAIA,yBAAA,UAAA,IAAA,cAAA,YAAA,CAAA,UAAA,CAAA,CALA;AAMA,2BAAA,IAAA,CANA;iBAAA,EAOA,EAPA,CAAA,CAVA;;AAmBA,uBAAA,IAAA,WAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,aAAA,CAAA,CAnBA;aAAA;SALA,CH6ByC;KAAhC,EAmDP,EAnDM,CAAF,EAmDA,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AItGzC,qBJsGyC;;AIpGzC,YAAA,cAAA,QAAA,kBAAA,CAAA;;;;AJoGyC,YIhGzC,sBAAA;AACA,yBAAA,QAAA,uBAAA,CAAA;SADA,CJgGyC;;AI5FzC,YAAA,mBAAA;AACA,uBAAA;AACA,4BAAA,QAAA,qCAAA,CAAA;AACA,0BAAA,QAAA,gCAAA,CAAA;aAFA;SADA,CJ4FyC;;AIrFzC,YAAA,sBAAA,CJqFyC;;AInFzC,iBAAA,UAAA,CAAA,OAAA,EAAA;AACA,mBAAA,QAAA,MAAA,CAAA,UAAA,IAAA,EAAA,UAAA,EAAA;AACA,qBAAA,UAAA,IAAA,OAAA,EAAA,CAAA,OAAA,QAAA,CAAA,QAAA,SAAA,OAAA,QAAA,CAAA,IAAA,SAAA,UAAA,CAAA,CADA;AAEA,uBAAA,IAAA,CAFA;aAAA,EAGA,EAHA,CAAA,CADA;SAAA;;AAOA,eAAA,OAAA,GAAA;AACA,kBAAA,SAAA,IAAA,CAAA,YAAA,EAAA;AACA,gCAAA,YAAA,CADA;;AAGA,4BAAA,IAAA,CAAA;AACA,gCAAA,mBAAA;AACA,kCAAA,WAAA,OAAA,IAAA,CAAA,cAAA,OAAA,CAAA,CAAA;iBAFA,EAHA;aAAA;;AASA,4BAAA,SAAA,cAAA,GAAA;AACA,uBAAA,cAAA,UAAA,CAAA,MAAA,CAAA,UAAA,UAAA,EAAA,aAAA,EAAA;AACA,4BAAA,GAAA,wBAAA,aAAA,EADA;;AAGA,+BAAA,aAAA,IAAA,oBAAA,aAAA,CAAA,CAHA;AAIA,2BAAA,UAAA,CAJA;iBAAA,EAKA,EALA,CAAA,CADA;aAAA;;AASA,yBAAA,SAAA,WAAA,GAAA;;;AACA,oBAAA,UAAA,cAAA,OAAA,CADA;;AAGA,uBAAA,IAAA,CAAA,OAAA,EAAA,OAAA,CAAA,UAAA,UAAA,EAAA;AACA,4BAAA,GAAA,qBAAA,UAAA,EADA;;AAGA,wBAAA,kBAAA,iBAAA,UAAA,CAAA,CAHA;AAIA,oCAAA,MAAA,CAAA,IAAA,CAAA,MAAA,cAAA,CAAA,UAAA,CAAA,EAAA,gBAAA,QAAA,CAAA,aAAA,CAAA,CAJA;iBAAA,CAAA,CAHA;aAAA;;AAWA,4BAAA,SAAA,eAAA,CAAA,UAAA,EAAA;AACA,oBAAA,WAAA,iBAAA,UAAA,EAAA,QAAA,CADA;;AAGA,uBAAA,YAAA,oBAAA,CAAA,SAAA,IAAA,EAAA,SAAA,QAAA,CAAA,CAHA;aAAA;SA9BA,CJ4EyC;KAAhC,EA+DP,EAAC,kCAAiC,CAAjC,EAAmC,uCAAsC,CAAtC,EAAwC,yBAAwB,CAAxB,EAA0B,oBAAmB,CAAnB,EA/DhG,CAAF,EA+DyH,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AKrKlK,qBLqKkK;;AKnKlK,YAAA,gBAAA,QAAA,sBAAA,CAAA,CLmKkK;AKlKlK,YAAA,WAAA,QAAA,qBAAA,CAAA,CLkKkK;;AKhKlK,iBAAA,IAAA,CAAA,aAAA,ELgKkK;AK/JlK,iBAAA,cAAA,GL+JkK;AK9JlK,iBAAA,WAAA,GL8JkK;KAAhC,EAShI,EAAC,wBAAuB,CAAvB,EAAyB,uBAAsB,CAAtB,EATqG,CAAF,EASzE,GAAE,CAAC,UAAS,OAAT,EAAiB,MAAjB,EAAwB,OAAxB,EAAgC;AM9KzF;;;;AN8KyF,cM1KzF,CAAA,OAAA,GAAA,SAAA,SAAA,GAAA;AACA,gBAAA,YAAA,CAAA,CADA;AAEA,gBAAA,kBAAA,CAFA;;AAIA,gBAAA,WAAA,CAAA,CAJA;AAKA,gBAAA,iBAAA,CALA;;AAOA,gBAAA,eAAA,CAPA;;AASA,iBAAA,SAAA,GAAA,SAAA,SAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AACA,4BAAA,GAAA,CADA;;AAGA,oBAAA,OAAA,GAAA,KAAA,WAAA,EAAA;AACA,gCAAA,GAAA,CADA;iBAAA;aAHA,CATA;;AAiBA,iBAAA,QAAA,GAAA,SAAA,QAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AACA,2BAAA,GAAA,CADA;;AAGA,oBAAA,OAAA,GAAA,KAAA,WAAA,EAAA;AACA,+BAAA,GAAA,CADA;iBAAA;aAHA,CAjBA;;AAyBA,iBAAA,MAAA,GAAA,SAAA,MAAA,CAAA,GAAA,EAAA;AACA,oBAAA,CAAA,GAAA,EAAA;AACA,0BAAA,IAAA,KAAA,CAAA,gDAAA,CAAA,CADA;iBAAA;AAGA,yBAAA,aAAA,CAJA;;AAMA,oBAAA,MAAA,CAAA,SAAA,EANA;aAAA,CAzBA;;AAoCA,qBAAA,WAAA,GAAA;AACA,oBAAA,CAAA,SAAA,IAAA,CAAA,QAAA,EAAA;AACA,0BAAA,IAAA,KAAA,CAAA,gEAAA,CAAA,CADA;iBAAA;;AAIA,uBAAA,GACA,KADA,CAEA,MAFA,GAGA,MAHA,CAGA,CAAA,SAAA,EAAA,SAAA,CAHA,EAIA,KAJA,CAIA,CAAA,QAAA,EAAA,QAAA,CAJA,CAAA,CALA;aAAA;SApCA,CN0KyF;KAAhC,EAqDvD,EArDsD,CAAF,EF9KtD,EEmOO,EFnOP,EEmOU,CAAC,CAAD,CFnOV","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nlet cerberusAPI;\n\nmodule.exports = {\n    init: function init(_cerberusAPI) {\n        cerberusAPI = _cerberusAPI;\n\n        let socket = cerberusAPI.getSocket(\"loadavg\");\n\n        socket.on(\"current\", loadavg => console.log(loadavg));\n\n        initializeUIElements();\n        initializeWebSocket();\n\n    }\n};\n\nfunction initializeUIElements() {\nconsole.log(\"initializing UIElements\");\n}\n\nfunction initializeWebSocket() {\n\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nlet cerberusAPI;\n\nmodule.exports = {\n    init: function init(_cerberusAPI) {\n        cerberusAPI = _cerberusAPI;\n\n        let socket = cerberusAPI.getSocket(\"loadavg\");\n\n        socket.on(\"current\", loadavg => console.log(loadavg));\n\n        initializeUIElements();\n        initializeWebSocket();\n\n    }\n};\n\nfunction initializeUIElements() {\nconsole.log(\"initializing UIElements\");\n}\n\nfunction initializeWebSocket() {\n\n}\n},{}],2:[function(require,module,exports){\nmodule.exports={\n  \"name\": \"loadavg\",\n  \"description\": \"Renders load average over a period of time\",\n  \"entry\": \"index.js\",\n  \"cerberus\": {\n    \"UIElements\": [\"lineChart\"],\n    \"routes\": [\"loadavg\"],\n    \"exposes\": []\n  },\n  \"configuration\": {\n    \"timeWindow\": {\n      \"number\": 10,\n      \"unit\": \"minutes\"\n    }\n  }\n}\n},{}],3:[function(require,module,exports){\nmodule.exports={\n  \"title\": \"Cerberus - System monitoring\",\n  \"modules\": {\n    \"loadavg\": \"../modules/loadavg/\"\n  },\n  \"UIElements\": [\"lineChart\"]\n}\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nlet configuration;\n\nfunction CerberusAPI(name, UIElements, sockets) {\n    this.getUIElement = function getUIElement(UIElementName) {\n        if (!UIElements[UIElementName]) {\n            throw new Error(`${name} doesn't have access to UIElement ${UIElementName}. Add it to the module's manifest.`);\n        }\n\n        return UIElements[UIElementName];\n    };\n\n    this.getSocket = function getSocket(socketName) {\n        if (!sockets[socketName]) {\n            throw new Error(`${name} doesn't have access to socket ${socketName}. Add it to the module's manifest.`);\n        }\n\n        return sockets[socketName];\n    }\n}\n\nmodule.exports = {\n    init: function init(config) {\n        configuration = config;\n    },\n\n    getCerberusForModule: function getCerberusForModule(name, manifest) {\n        let moduleUIElements = manifest.UIElements.reduce((memo, moduleUIElement) => {\n            if (!configuration.UIElements[moduleUIElement]) {\n                throw new Error(`${name} is requesting UIElement ${moduleUIElement} but it doesn't exist`);\n            }\n\n            memo[moduleUIElement] = configuration.UIElements[moduleUIElement];\n            return memo;\n        }, {});\n\n        let moduleSockets = manifest.routes.reduce((memo, socketName) => {\n            if (!configuration.AgentSockets[socketName]) {\n                throw new Error(`${name} is requesting socket ${socketName} but it doesn't exist`);\n            }\n\n            memo[socketName] = configuration.AgentSockets[socketName];\n            return memo;\n        }, {});\n\n        return new CerberusAPI(name, moduleUIElements, moduleSockets);\n    }\n};\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nconst cerberusAPI = require(\"./cerberusAPI.js\");\n\n// UIElements and modules are preloaded to help the build but they shouldn't be,\n// See web/README.md and docs/FEATURESREQUESTS.md.\nconst preloadedUIElements = {\n  \"lineChart\": require(\"../ui/lineChart/index\")\n};\n\nconst preloadedModules = {\n  \"loadavg\": {\n      \"manifest\": require(\"../../modules/loadavg/manifest.json\"),\n      \"module\": require(\"../../modules/loadavg/index.js\")\n  }\n};\n\nlet configuration;\n\nfunction getSockets(sockets) {\n    return sockets.reduce((memo, socketName) => {\n        memo[socketName] = window.io(`${window.location.hostname}:${window.location.port}/${socketName}`);\n        return memo;\n    }, {});\n}\n\nmodule.exports = {\n    init: function init(cerberusConf) {\n        configuration = cerberusConf;\n\n        cerberusAPI.init({\n            UIElements: preloadedUIElements,\n            AgentSockets: getSockets(Object.keys(configuration.modules))\n        });\n    },\n\n    loadUIElements: function loadUIElements() {\n        return configuration.UIElements.reduce((UIElements, UIElementName) => {\n            console.log(`Loading UIElement ${UIElementName}`);\n\n            UIElements[UIElementName] = preloadedUIElements[UIElementName];\n            return UIElements;\n        }, {});\n    },\n\n    loadModules: function loadModules() {\n        let modules = configuration.modules;\n\n        Object.keys(modules).forEach((moduleName) => {\n            console.log(`Loading module ${moduleName}`);\n\n            let preloadedModule = preloadedModules[moduleName];\n            preloadedModule.module.init(this.getCerberusAPI(moduleName), preloadedModule.manifest.configuration);\n        });\n    },\n\n    getCerberusAPI: function loadCerberusAPI(moduleName) {\n        let manifest = preloadedModules[moduleName].manifest;\n\n        return cerberusAPI.getCerberusForModule(manifest.name, manifest.cerberus);\n    }\n};\n},{\"../../modules/loadavg/index.js\":1,\"../../modules/loadavg/manifest.json\":2,\"../ui/lineChart/index\":7,\"./cerberusAPI.js\":4}],6:[function(require,module,exports){\n\"use strict\";\n\nconst configuration = require(\"./cerberus.conf.json\");\nconst cerberus = require(\"./cerberus/index.js\");\n\ncerberus.init(configuration);\ncerberus.loadUIElements();\ncerberus.loadModules();\n},{\"./cerberus.conf.json\":3,\"./cerberus/index.js\":5}],7:[function(require,module,exports){\n\"use strict\";\n\n//const d3 = require(\"d3\");\n\nmodule.exports = function LineChart() {\n    let minDomain = 0;\n    let maxDomain;\n\n    let minRange = 0;\n    let maxRange;\n\n    let _scale;\n\n    this.setDomain = function setDomain(max, min) {\n        maxDomain = max;\n\n        if (typeof min !== \"undefined\") {\n            minDomain = min;\n        }\n    };\n\n    this.setRange = function setRange(max, min) {\n        maxRange = max;\n\n        if (typeof min !== \"undefined\") {\n            minRange = min;\n        }\n    };\n\n    this.render = function render(dom) {\n        if (!dom) {\n            throw new Error(\"LineChart requires a dom element to e rendered\");\n        }\n        _scale = createScale();\n\n        dom.append(\"svg:svg\");\n\n\n    };\n\n    function createScale() {\n        if (!maxDomain || !maxRange) {\n            throw new Error(\"LineChart requires a max range and a max domain to be rendered\");\n        }\n\n        return d3\n            .scale\n            .linear()\n            .domain([minDomain, maxDomain])\n            .range([minRange, maxRange]);\n    }\n};\n},{}]},{},[6])\n\n","module.exports={\n  \"name\": \"loadavg\",\n  \"description\": \"Renders load average over a period of time\",\n  \"entry\": \"index.js\",\n  \"cerberus\": {\n    \"UIElements\": [\"lineChart\"],\n    \"routes\": [\"loadavg\"],\n    \"exposes\": []\n  },\n  \"configuration\": {\n    \"timeWindow\": {\n      \"number\": 10,\n      \"unit\": \"minutes\"\n    }\n  }\n}","module.exports={\n  \"title\": \"Cerberus - System monitoring\",\n  \"modules\": {\n    \"loadavg\": \"../modules/loadavg/\"\n  },\n  \"UIElements\": [\"lineChart\"]\n}","\"use strict\";\n\nlet configuration;\n\nfunction CerberusAPI(name, UIElements, sockets) {\n    this.getUIElement = function getUIElement(UIElementName) {\n        if (!UIElements[UIElementName]) {\n            throw new Error(`${name} doesn't have access to UIElement ${UIElementName}. Add it to the module's manifest.`);\n        }\n\n        return UIElements[UIElementName];\n    };\n\n    this.getSocket = function getSocket(socketName) {\n        if (!sockets[socketName]) {\n            throw new Error(`${name} doesn't have access to socket ${socketName}. Add it to the module's manifest.`);\n        }\n\n        return sockets[socketName];\n    }\n}\n\nmodule.exports = {\n    init: function init(config) {\n        configuration = config;\n    },\n\n    getCerberusForModule: function getCerberusForModule(name, manifest) {\n        let moduleUIElements = manifest.UIElements.reduce((memo, moduleUIElement) => {\n            if (!configuration.UIElements[moduleUIElement]) {\n                throw new Error(`${name} is requesting UIElement ${moduleUIElement} but it doesn't exist`);\n            }\n\n            memo[moduleUIElement] = configuration.UIElements[moduleUIElement];\n            return memo;\n        }, {});\n\n        let moduleSockets = manifest.routes.reduce((memo, socketName) => {\n            if (!configuration.AgentSockets[socketName]) {\n                throw new Error(`${name} is requesting socket ${socketName} but it doesn't exist`);\n            }\n\n            memo[socketName] = configuration.AgentSockets[socketName];\n            return memo;\n        }, {});\n\n        return new CerberusAPI(name, moduleUIElements, moduleSockets);\n    }\n};\n","\"use strict\";\n\nconst cerberusAPI = require(\"./cerberusAPI.js\");\n\n// UIElements and modules are preloaded to help the build but they shouldn't be,\n// See web/README.md and docs/FEATURESREQUESTS.md.\nconst preloadedUIElements = {\n  \"lineChart\": require(\"../ui/lineChart/index\")\n};\n\nconst preloadedModules = {\n  \"loadavg\": {\n      \"manifest\": require(\"../../modules/loadavg/manifest.json\"),\n      \"module\": require(\"../../modules/loadavg/index.js\")\n  }\n};\n\nlet configuration;\n\nfunction getSockets(sockets) {\n    return sockets.reduce((memo, socketName) => {\n        memo[socketName] = window.io(`${window.location.hostname}:${window.location.port}/${socketName}`);\n        return memo;\n    }, {});\n}\n\nmodule.exports = {\n    init: function init(cerberusConf) {\n        configuration = cerberusConf;\n\n        cerberusAPI.init({\n            UIElements: preloadedUIElements,\n            AgentSockets: getSockets(Object.keys(configuration.modules))\n        });\n    },\n\n    loadUIElements: function loadUIElements() {\n        return configuration.UIElements.reduce((UIElements, UIElementName) => {\n            console.log(`Loading UIElement ${UIElementName}`);\n\n            UIElements[UIElementName] = preloadedUIElements[UIElementName];\n            return UIElements;\n        }, {});\n    },\n\n    loadModules: function loadModules() {\n        let modules = configuration.modules;\n\n        Object.keys(modules).forEach((moduleName) => {\n            console.log(`Loading module ${moduleName}`);\n\n            let preloadedModule = preloadedModules[moduleName];\n            preloadedModule.module.init(this.getCerberusAPI(moduleName), preloadedModule.manifest.configuration);\n        });\n    },\n\n    getCerberusAPI: function loadCerberusAPI(moduleName) {\n        let manifest = preloadedModules[moduleName].manifest;\n\n        return cerberusAPI.getCerberusForModule(manifest.name, manifest.cerberus);\n    }\n};","\"use strict\";\n\nconst configuration = require(\"./cerberus.conf.json\");\nconst cerberus = require(\"./cerberus/index.js\");\n\ncerberus.init(configuration);\ncerberus.loadUIElements();\ncerberus.loadModules();","\"use strict\";\n\n//const d3 = require(\"d3\");\n\nmodule.exports = function LineChart() {\n    let minDomain = 0;\n    let maxDomain;\n\n    let minRange = 0;\n    let maxRange;\n\n    let _scale;\n\n    this.setDomain = function setDomain(max, min) {\n        maxDomain = max;\n\n        if (typeof min !== \"undefined\") {\n            minDomain = min;\n        }\n    };\n\n    this.setRange = function setRange(max, min) {\n        maxRange = max;\n\n        if (typeof min !== \"undefined\") {\n            minRange = min;\n        }\n    };\n\n    this.render = function render(dom) {\n        if (!dom) {\n            throw new Error(\"LineChart requires a dom element to e rendered\");\n        }\n        _scale = createScale();\n\n        dom.append(\"svg:svg\");\n\n\n    };\n\n    function createScale() {\n        if (!maxDomain || !maxRange) {\n            throw new Error(\"LineChart requires a max range and a max domain to be rendered\");\n        }\n\n        return d3\n            .scale\n            .linear()\n            .domain([minDomain, maxDomain])\n            .range([minRange, maxRange]);\n    }\n};"],"sourceRoot":"/source/"}